{% extends 'base.html.twig' %}

{% block body %}
<div class="min-h-screen bg-background flex flex-col">
    <!-- Barre de navigation -->
    <nav class="bg-white shadow-lg sticky top-0 z-20">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-4">
                <!-- Logo -->
                <a href="/" class="text-xl font-extrabold text-primary">Ultramar</a>
                <!-- Menu de navigation -->
                <div class="hidden md:flex space-x-6 items-center">
                    <a href="#" class="text-gray-700 hover:text-primary transition">Accueil</a>
                    <a href="#" class="text-gray-700 hover:text-primary transition">À propos</a>
                    <a href="#" class="text-gray-700 hover:text-primary transition">Contact</a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Contenu principal -->
    <main class="flex-grow flex items-center justify-center bg-background relative">
        <div class="bg-white p-8 rounded-lg shadow-lg w-full max-w-3xl flex">
            <!-- Zone des messages -->
            <div class="flex-grow">
                <h2 class="text-2xl font-bold text-primary text-center mb-6">{{ chatroom.name }}</h2>
                
                <div id="messages" class="messages mb-6 max-h-96 overflow-y-auto">
                    {% for message in chatroom.messages %}
                        <div class="message mb-4">
                            <strong class="text-primary">{{ message.user.email }}:</strong> 
                            <p class="text-gray-700">{{ message.content }}</p>
                        </div>
                    {% endfor %}
                </div>

                <!-- Boutons pour les commandes Groq -->
                <div class="flex flex-wrap justify-center gap-2 mb-4">
                    <button id="synthesize" data-chatroom-id="{{ chatroom.id }}" class="bg-primary text-black py-2 px-4 rounded hover:bg-tertiary transition duration-300">Synthétiser</button>                    <button id="generate-idea" data-chatroom-id="{{ chatroom.id }}" class="bg-primary text-black py-2 px-4 rounded hover:bg-tertiary transition duration-300">Générer une idée</button>
                    <button id="critique" data-chatroom-id="{{ chatroom.id }}" class="bg-primary text-black py-2 px-4 rounded hover:bg-tertiary transition duration-300">Critiquer</button>
                    <button id="custom-prompt" data-chatroom-id="{{ chatroom.id }}" class="bg-primary text-black py-2 px-4 rounded hover:bg-tertiary transition duration-300">Prompt personnalisé</button>
                </div>

                <!-- Formulaire d'envoi de message -->
                <form action="{{ path('app_chat_send', {'id': chatroom.id}) }}" method="post" class="flex items-center space-x-4">
                    <input type="text" name="content" required class="w-full bg-gray-100 border border-gray-300 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-primary">
                    <button type="submit" class="bg-primary text-black py-3 px-6 rounded hover:bg-tertiary transition duration-300"> Envoyer </button>
                </form>
            </div>
        </div>

        <!-- Zone d'ajout d'utilisateur -->
        <div class="absolute right-4 top-1/2 transform -translate-y-1/2 flex-shrink-0 w-72">
            <div class="bg-white p-6 rounded-lg shadow-lg">
                <h3 class="text-xl font-bold text-primary mb-4">Ajouter un utilisateur</h3>
                <form action="{{ path('app_user_chatroom_new', {'chatroomId': chatroom.id}) }}" method="post" class="flex flex-col space-y-4">
                    <input type="email" name="email" required placeholder="Email de l'utilisateur à ajouter" class="bg-gray-100 border border-gray-300 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-primary">
                    <button type="submit" class="bg-primary text-black py-3 px-6 rounded hover:bg-tertiary transition duration-300"> Ajouter </button>
                </form>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="bg-gray-800 text-gray-200 py-4">
        <div class="max-w-7xl mx-auto text-center">
            <p class="text-sm">© 2024 Ultramar. Tous droits réservés.</p>
        </div>
    </footer>
</div>

{% block javascripts %}
<script>
    document.querySelectorAll('#synthesize, #generate-idea, #critique, #custom-prompt').forEach(button => {
        button.addEventListener('click', () => {
            const chatroomId = button.getAttribute('data-chatroom-id');
            let customPrompt = null;

            if (button.id === 'custom-prompt') {
                customPrompt = prompt("Entrez votre prompt personnalisé :");
                if (!customPrompt) return;
            }

            sendRequest(`/api/${button.id}/${chatroomId}`, customPrompt);
        });
    });

    function sendRequest(url, customPrompt = null) {
        const messages = Array.from(document.querySelectorAll('.message')).map(msg => msg.textContent.trim());
        
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ messages, customPrompt }),
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            displayApiResponse(data);
        })
        .catch(error => {
            console.error('Erreur:', error);
            displayApiResponse({ error: "Une erreur s'est produite lors de la requête." });
        });
    }


    function displayApiResponse(data) {
        const responseElement = document.createElement('div');
        responseElement.className = 'message mb-4 bg-gray-100 p-3 rounded';
        responseElement.innerHTML = `
            <strong class="text-primary">IA:</strong>
            <p class="text-gray-700">${data.synthesis || data.message}</p>
        `;
        
        const messagesContainer = document.getElementById('messages');
        messagesContainer.appendChild(responseElement);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

</script>
{% endblock %}

{% endblock %}
