{% extends 'base.html.twig' %}
{% block title %}Chatroom{% endblock %}
{% block body %}
<div class="min-h-screen bg-background flex flex-col">
    <!-- Barre de navigation -->
    <nav class="bg-white shadow-lg sticky top-0 z-20">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-4">
                <!-- Logo -->
                <a href="/" class="text-xl font-extrabold text-blue-900">BrainSpark AI </a>
                <!-- Menu de navigation -->
                <div class="hidden md:flex space-x-6 items-center">
                    <a href="{{ path('app_a_propos') }}" class="text-gray-700 hover:text-blue-700 transition">√Ä propos</a>
                    <a href="{{ path('app_contact') }}" class="text-gray-700 hover:text-blue-700 transition">Contact</a>
                <!-- Menu utilisateur -->
                    <div class="relative">
                        <button id="userMenuButton" class="flex items-center text-gray-700 hover:text-blue-700 focus:outline-none">
                            <span class="mr-2">üë§</span>
                            <span id="accountStatus" class="font-medium">
                                {% if is_granted('IS_AUTHENTICATED_REMEMBERED') %}
                                    {{ app.user.username }}
                                {% else %}
                                    Compte
                                {% endif %}
                            </span>
                        </button>
                        <div id="userMenu" class="absolute right-0 mt-2 w-48 bg-white border border-gray-200 rounded-lg shadow-lg hidden">
                            {% if is_granted('IS_AUTHENTICATED_REMEMBERED') %}
                                <a href="{{ path('app_logout') }}" id="logoutLink" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Se d√©connecter</a>
                            {% else %}
                                <a href="{{ path('app_login') }}" id="loginLink" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Se connecter</a>
                                <a href="{{ path('app_register') }}" id="registerLink" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Cr√©er un compte</a>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Contenu principal -->
    <main class="flex-grow bg-background relative p-4 md:p-8">
        <div class="flex flex-col md:flex-row gap-8 max-w-7xl mx-auto">
            <!-- Liste des chatrooms √† gauche -->
            <div class="chatroom-list bg-white p-6 rounded-lg shadow w-full md:w-1/4">
                <h2 class="text-xl font-bold text-primary mb-4">Vos Chatrooms</h2>
                {% if app.user.getUserChatrooms() is not empty %}
                    <ul class="space-y-2">
                        {% for userChatroom in app.user.getUserChatrooms() %}
                            <li>
                                <a href="{{ path('app_chat_room', {'id': userChatroom.chatroom.id}) }}" 
                                class="text-blue-500 hover:text-blue-700 font-semibold {% if chatroom.id == userChatroom.chatroom.id %}font-bold{% endif %}">
                                    {{ userChatroom.chatroom.name }}
                                </a>
                            </li>
                        {% endfor %}
                    </ul>
                {% else %}
                    <p class="text-gray-500">Vous n'√™tes associ√© √† aucune chatroom pour le moment.</p>
                {% endif %}
            </div>
            
            <!-- Zone centrale (messages, boutons Groq, formulaire d'envoi) -->
            <div class="flex-grow bg-white p-6 rounded-lg shadow">
                <h2 class="text-2xl font-bold text-primary text-center mb-6">{{ chatroom.name }}</h2>
                
                <div id="messages" class="messages mb-6 max-h-96 overflow-y-auto">
                    {% for message in chatroom.messages %}
                        <div class="message mb-4">
                            <strong class="text-primary">{{ message.user.username }}:</strong> 
                            <p class="text-gray-700">{{ message.content }}</p>
                        </div>
                    {% endfor %}
                </div>

                <!-- Boutons pour les commandes Groq -->
                <div class="flex flex-wrap justify-center gap-2 mb-4">
                    <button id="synthesize" data-chatroom-id="{{ chatroom.id }}" class="bg-red-800 text-white py-2 px-4 rounded hover:bg-red-900 transition duration-300">Synth√©tiser</button>
                    <button id="generate-idea" data-chatroom-id="{{ chatroom.id }}" class="bg-red-800 text-white py-2 px-4 rounded hover:bg-red-900 transition duration-300">G√©n√©rer une id√©e</button>                    
                    <button id="critique" data-chatroom-id="{{ chatroom.id }}" class="bg-red-800 text-white py-2 px-4 rounded hover:bg-red-900 transition duration-300">Critiquer</button>
                    <button id="custom-prompt" data-chatroom-id="{{ chatroom.id }}" class="bg-red-800 text-white py-2 px-4 rounded hover:bg-red-900 transition duration-300">Prompt personnalis√©</button>
                </div>

                <!-- Formulaire d'envoi de message -->
                <form action="{{ path('app_chat_send', {'id': chatroom.id}) }}" method="post" class="flex items-center space-x-4">
                    <input type="text" name="content" required class="w-full bg-gray-100 border border-gray-300 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-primary">
                    <button type="submit" class="bg-blue-600 hover:bg-blue-800 text-white py-3 px-6 rounded transition duration-300">Envoyer</button>
                </form>
            </div>

            <!-- Zone d'ajout d'utilisateur √† droite -->
            <div class="bg-white p-6 rounded-lg shadow w-full md:w-1/4">
                <h3 class="text-xl font-bold text-primary mb-4">Ajouter un utilisateur</h3>
                <form action="{{ path('app_user_chatroom_new', {'chatroomId': chatroom.id}) }}" method="post" class="flex flex-col space-y-4">
                    <input type="email" name="email" required placeholder="Email de l'utilisateur √† ajouter" class="bg-gray-100 border border-gray-300 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-primary">
                    <button type="submit" class="bg-blue-600 hover:bg-blue-800 text-white py-3 px-6 rounded transition duration-300">Ajouter</button>
                </form>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="bg-gray-800 text-gray-200 py-4">
        <div class="max-w-7xl mx-auto text-center">
            <p class="text-sm">¬© 2024 BrainSpark AI . Tous droits r√©serv√©s.</p>
        </div>
    </footer>
</div>


{% block javascripts %}
<script>

    document.addEventListener('DOMContentLoaded', () => {
    const userMenuButton = document.getElementById('userMenuButton');
    const userMenu = document.getElementById('userMenu');

        if (userMenuButton && userMenu) {
            userMenuButton.addEventListener('click', () => {
                userMenu.classList.toggle('hidden');
            });
        }
    });

    document.querySelectorAll('#synthesize, #generate-idea, #critique, #custom-prompt').forEach(button => {
        button.addEventListener('click', () => {
            const chatroomId = button.getAttribute('data-chatroom-id');
            let customPrompt = null;

            if (button.id === 'custom-prompt') {
                customPrompt = prompt("Entrez votre prompt personnalis√© :");
                if (!customPrompt) return;
            }

            sendRequest(`/api/${button.id}/${chatroomId}`, customPrompt);
        });
    });

    function sendRequest(url, customPrompt = null) {
        const messages = Array.from(document.querySelectorAll('.message')).map(msg => msg.textContent.trim());
        
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ messages, customPrompt }),
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            displayApiResponse(data);
        })
        .catch(error => {
            console.error('Erreur:', error);
            displayApiResponse({ error: "Une erreur s'est produite lors de la requ√™te." });
        });
    }


    function displayApiResponse(data) {
        const responseElement = document.createElement('div');
        responseElement.className = 'message mb-4 bg-gray-100 p-3 rounded';
        responseElement.innerHTML = `
            <strong class="text-primary">IA:</strong>
            <p class="text-gray-700">${data.synthesis || data.message}</p>
        `;
        
        const messagesContainer = document.getElementById('messages');
        messagesContainer.appendChild(responseElement);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

</script>
{% endblock %}

{% endblock %}
